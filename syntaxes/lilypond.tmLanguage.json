{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "LilyPond",
    "scopeName": "source.lilypond",
    "fileTypes": [
        "ly",
        "ily"
    ],
    "patterns": [
        {
            "include": "#notenames"
        },
        {
            "include": "#internals"
        },
        {
            "include": "#notemode"
        },
        {
            "include": "#drummode"
        },
        {
            "include": "#lyricsmode"
        },
        {
            "include": "#notemode-explicit"
        },
        {
            "include": "#markupmode"
        },
        {
            "include": "#figbassmode"
        },
        {
            "include": "#lilypond-scheme"
        }
    ],
    "repository": {
        "notenames": {
            "patterns": [
                {
                    "match": "\\b((((solx|soltcs|soltcb|solstqt|solss|solsqt|solsd|solsb|sols|solkk|solk|soldsd|soldd|sold|solcs|solcb|solbtqt|solbsb|solbqt|solbb|solb|sol|six|sitcs|sitcb|sistqt|siss|sisqt|sisd|sisb|sis|sikk|sik|sidsd|sidd|sid|sics|sicb|sibtqt|sibsb|sibqt|sibb|sib|si|r[eé]x|r[eé]tcs|r[eé]tcb|r[eé]stqt|r[eé]ss|r[eé]sqt|r[eé]sd|r[eé]sb|r[eé]s|r[eé]kk|r[eé]k|r[eé]dsd|r[eé]dd|r[eé]d|r[eé]cs|r[eé]cb|r[eé]btqt|r[eé]bsb|r[eé]bqt|r[eé]bb|r[eé]b|r[eé]|mix|mitcs|mitcb|mistqt|miss|misqt|misd|misb|mis|mikk|mik|midsd|midd|mid|mics|micb|mibtqt|mibsb|mibqt|mibb|mib|mi|lax|latcs|latcb|lastqt|lass|lasqt|lasd|lasb|las|lakk|lak|ladsd|ladd|lad|lacs|lacb|labtqt|labsb|labqt|labb|lab|la|hississ|hiss|hisis|hisih|his|hih|hessess|heses|heseh|h|gx|gtqs|gtqf|gss|gsharpsharp|gsharp|gs|gqs|gqf|gississ|giss|gisis|gisih|gis|gih|gflatflat|gflat|gff|gf|gessess|gess|geses|geseh|ges|geh|g|fx|ftqs|ftqf|fss|fsharpsharp|fsharp|fs|fqs|fqf|fississ|fiss|fisis|fisih|fis|fih|fflatflat|fflat|fff|ff|fessess|fess|feses|feseh|fes|feh|fax|fatcs|fatcb|fastqt|fass|fasqt|fasd|fasb|fas|fakk|fak|fadsd|fadd|fad|facs|facb|fabtqt|fabsb|fabqt|fabb|fab|fa|(?<!#)f|ex|etqs|etqf|essess|ess|esharpsharp|esharp|eses|eseh|es|eqs|eqf|eississ|eiss|eisis|eisih|eis|eih|eflatflat|eflat|eff|ef|eessess|eess|eeses|eeseh|ees|eeh|e|dx|dtqs|dtqf|dss|dsharpsharp|dsharp|ds|dqs|dqf|dox|dotcs|dotcb|dostqt|doss|dosqt|dosd|dosb|dos|dokk|dok|dodsd|dodd|dod|docs|docb|dobtqt|dobsb|dobqt|dobb|dob|do|dississ|diss|disis|disih|dis|dih|dflatflat|dflat|dff|df|dessess|dess|deses|deseh|des|deh|d|cx|ctqs|ctqf|css|csharpsharp|csharp|cs|cqs|cqf|cississ|ciss|cisis|cisih|cis|cih|cflatflat|cflat|cff|cf|cessess|cess|ceses|ceseh|ces|ceh|c|bx|btqs|btqf|bss|bsharpsharp|bsharp|bs|bqs|bqf|bisis|bisih|bis|bih|bflatflat|bflat|bff|bf|bess|beses|beseh|bes|beh|bb|b|ax|atqs|atqf|assess|ass|asharpsharp|asharp|ases|aseh|asas|asah|as|aqs|aqf|aississ|aiss|aisis|aisih|ais|aih|aflatflat|aflat|aff|af|aessess|aess|aeses|aeseh|aes|aeh|a|a)(\\s*[=]?\\s*(([,]\\s*)|([']\\s*)){0,4}\\s*[?!]?)?)|s|r|R|q)(?![A-Za-z])(\\s*(128|64|32|16|8|4|2|1|\\\\breve|\\\\longa|\\\\maxima)(\\s*[.]\\s*)*((\\s*\\*\\s*\\d+(\\/\\d+)?)+)?)?(\\s*[:](\\s*(aug7|aug|dim|maj7|maj9|maj11|maj|m7\\.5-|m7\\+|m11|m9|m7|m6|m5|m|dim7|13\\.11|13[-+]?|6[-+]?|9[-+]?|11[-+]?|sus2|sus4|sus|1[-+]?\\.5[-+]?|1[-+]?\\.5[-+]?\\.8[-+]?|\\d*[-+]?)((\\s*[.]?\\s*\\d+[-+]?)|[-+])*)?)?(\\s*\\^\\s*\\d+(\\s*\\.\\s*\\d+)*)?(\\s*/[\\+]?\\s*(solx|soltcs|soltcb|solstqt|solss|solsqt|solsd|solsb|sols|solkk|solk|soldsd|soldd|sold|solcs|solcb|solbtqt|solbsb|solbqt|solbb|solb|sol|six|sitcs|sitcb|sistqt|siss|sisqt|sisd|sisb|sis|sikk|sik|sidsd|sidd|sid|sics|sicb|sibtqt|sibsb|sibqt|sibb|sib|si|r[eé]x|r[eé]tcs|r[eé]tcb|r[eé]stqt|r[eé]ss|r[eé]sqt|r[eé]sd|r[eé]sb|r[eé]s|r[eé]kk|r[eé]k|r[eé]dsd|r[eé]dd|r[eé]d|r[eé]cs|r[eé]cb|r[eé]btqt|r[eé]bsb|r[eé]bqt|r[eé]bb|r[eé]b|r[eé]|mix|mitcs|mitcb|mistqt|miss|misqt|misd|misb|mis|mikk|mik|midsd|midd|mid|mics|micb|mibtqt|mibsb|mibqt|mibb|mib|mi|lax|latcs|latcb|lastqt|lass|lasqt|lasd|lasb|las|lakk|lak|ladsd|ladd|lad|lacs|lacb|labtqt|labsb|labqt|labb|lab|la|hississ|hiss|hisis|hisih|his|hih|hessess|heses|heseh|h|gx|gtqs|gtqf|gss|gsharpsharp|gsharp|gs|gqs|gqf|gississ|giss|gisis|gisih|gis|gih|gflatflat|gflat|gff|gf|gessess|gess|geses|geseh|ges|geh|g|fx|ftqs|ftqf|fss|fsharpsharp|fsharp|fs|fqs|fqf|fississ|fiss|fisis|fisih|fis|fih|fflatflat|fflat|fff|ff|fessess|fess|feses|feseh|fes|feh|fax|fatcs|fatcb|fastqt|fass|fasqt|fasd|fasb|fas|fakk|fak|fadsd|fadd|fad|facs|facb|fabtqt|fabsb|fabqt|fabb|fab|fa|(?<!#)f|ex|etqs|etqf|essess|ess|esharpsharp|esharp|eses|eseh|es|eqs|eqf|eississ|eiss|eisis|eisih|eis|eih|eflatflat|eflat|eff|ef|eessess|eess|eeses|eeseh|ees|eeh|e|dx|dtqs|dtqf|dss|dsharpsharp|dsharp|ds|dqs|dqf|dox|dotcs|dotcb|dostqt|doss|dosqt|dosd|dosb|dos|dokk|dok|dodsd|dodd|dod|docs|docb|dobtqt|dobsb|dobqt|dobb|dob|do|dississ|diss|disis|disih|dis|dih|dflatflat|dflat|dff|df|dessess|dess|deses|deseh|des|deh|d|cx|ctqs|ctqf|css|csharpsharp|csharp|cs|cqs|cqf|cississ|ciss|cisis|cisih|cis|cih|cflatflat|cflat|cff|cf|cessess|cess|ceses|ceseh|ces|ceh|c|bx|btqs|btqf|bss|bsharpsharp|bsharp|bs|bqs|bqf|bisis|bisih|bis|bih|bflatflat|bflat|bff|bf|bess|beses|beseh|bes|beh|bb|b|ax|atqs|atqf|assess|ass|asharpsharp|asharp|ases|aseh|asas|asah|as|aqs|aqf|aississ|aiss|aisis|aisih|ais|aih|aflatflat|aflat|aff|af|aessess|aess|aeses|aeseh|aes|aeh|a|a))?)(?!(solx|soltcs|soltcb|solstqt|solss|solsqt|solsd|solsb|sols|solkk|solk|soldsd|soldd|sold|solcs|solcb|solbtqt|solbsb|solbqt|solbb|solb|sol|six|sitcs|sitcb|sistqt|siss|sisqt|sisd|sisb|sis|sikk|sik|sidsd|sidd|sid|sics|sicb|sibtqt|sibsb|sibqt|sibb|sib|si|r[eé]x|r[eé]tcs|r[eé]tcb|r[eé]stqt|r[eé]ss|r[eé]sqt|r[eé]sd|r[eé]sb|r[eé]s|r[eé]kk|r[eé]k|r[eé]dsd|r[eé]dd|r[eé]d|r[eé]cs|r[eé]cb|r[eé]btqt|r[eé]bsb|r[eé]bqt|r[eé]bb|r[eé]b|r[eé]|mix|mitcs|mitcb|mistqt|miss|misqt|misd|misb|mis|mikk|mik|midsd|midd|mid|mics|micb|mibtqt|mibsb|mibqt|mibb|mib|mi|lax|latcs|latcb|lastqt|lass|lasqt|lasd|lasb|las|lakk|lak|ladsd|ladd|lad|lacs|lacb|labtqt|labsb|labqt|labb|lab|la|hississ|hiss|hisis|hisih|his|hih|hessess|heses|heseh|h|gx|gtqs|gtqf|gss|gsharpsharp|gsharp|gs|gqs|gqf|gississ|giss|gisis|gisih|gis|gih|gflatflat|gflat|gff|gf|gessess|gess|geses|geseh|ges|geh|g|fx|ftqs|ftqf|fss|fsharpsharp|fsharp|fs|fqs|fqf|fississ|fiss|fisis|fisih|fis|fih|fflatflat|fflat|fff|ff|fessess|fess|feses|feseh|fes|feh|fax|fatcs|fatcb|fastqt|fass|fasqt|fasd|fasb|fas|fakk|fak|fadsd|fadd|fad|facs|facb|fabtqt|fabsb|fabqt|fabb|fab|fa|(?<!#)f|ex|etqs|etqf|essess|ess|esharpsharp|esharp|eses|eseh|es|eqs|eqf|eississ|eiss|eisis|eisih|eis|eih|eflatflat|eflat|eff|ef|eessess|eess|eeses|eeseh|ees|eeh|e|dx|dtqs|dtqf|dss|dsharpsharp|dsharp|ds|dqs|dqf|dox|dotcs|dotcb|dostqt|doss|dosqt|dosd|dosb|dos|dokk|dok|dodsd|dodd|dod|docs|docb|dobtqt|dobsb|dobqt|dobb|dob|do|dississ|diss|disis|disih|dis|dih|dflatflat|dflat|dff|df|dessess|dess|deses|deseh|des|deh|d|cx|ctqs|ctqf|css|csharpsharp|csharp|cs|cqs|cqf|cississ|ciss|cisis|cisih|cis|cih|cflatflat|cflat|cff|cf|cessess|cess|ceses|ceseh|ces|ceh|c|bx|btqs|btqf|bss|bsharpsharp|bsharp|bs|bqs|bqf|bisis|bisih|bis|bih|bflatflat|bflat|bff|bf|bess|beses|beseh|bes|beh|bb|b|ax|atqs|atqf|assess|ass|asharpsharp|asharp|ases|aseh|asas|asah|as|aqs|aqf|aississ|aiss|aisis|aisih|ais|aih|aflatflat|aflat|aff|af|aessess|aess|aeses|aeseh|aes|aeh|a|a))",
                    "name": "keyword.notechord.lilypond",
                    "content": "LilyPond note or chord abbreviation"
                }
            ]
        },
        "internals": {
            "patterns": [
                {
                    "name": "comment.block.lilypond",
                    "begin": "%{",
                    "end": "%}"
                },
                {
                    "name": "comment.line.lilypond",
                    "match": "%[^{].*",
                    "content": "LilyPond inline comment"
                },
                {
                    "name": "string.lilypond",
                    "begin": "(?<!\\\\)(([_^-]\\s*)?\")",
                    "end": "(?<!\\\\)(\")"
                },
                {
                    "match": "([-_^](\\s*))?\\\\(xNotesOn|xNotesOff|xNote|wordwrap-string-internal|wordwrap-string|wordwrap-lines|wordwrap-internal|wordwrap-field|wordwrap|withMusicProperty|with-url|with-link|with-dimensions|with-color|with|whiteout|whiteTriangleMarkup|walkerHeadsMinor|walkerHeads|vspace|void|voiceTwoStyle|voiceTwo|voiceThreeStyle|voiceThree|voiceOneStyle|voiceOne|voiceNeutralStyle|voiceFourStyle|voiceFour|vocalName|virgula|virga|verylongfermata|versus|version|verbatim-file|vcenter|varcoda|upright|upprall|upmordent|upbow|up|unset|unit|unfoldRepeats|underline|unaCorda|unHideNotes|typewriter|type|tweak|turn|tupletUp|tupletNeutral|tupletDown|tuplet|trill|triangle|treCorde|transposition|transposedCueDuring|transpose|transparent|translate-scaled|translate|topLevelAlignment|tocTitleMarkup|tocItemWithDotsMarkup|tocItemMarkup|tocItem|tiny|timing|times|timeSignatureSettings|timeSignatureFraction|time|tildeSymbol|tied-lyric|tieWaitForNote|tieUp|tieSolid|tieNeutral|tieHalfSolid|tieHalfDashed|tieDown|tieDotted|tieDashed|tieDashPattern|thumb|textSpannerUp|textSpannerNeutral|textSpannerDown|textLengthOn|textLengthOff|text|tenuto|tempoWholesPerMinute|tempo|teeny|tag|tagGroup|table-of-contents|tablatureFormat|tabStaffLineLayoutFunction|tabFullNotation|systemStartDelimiter|sustainOn|sustainOff|super|subdivideBeams|sub|styledNoteHeads|strut|stropha|strokeFingerOrientations|stringTunings|stringOneTopmost|stringNumberOrientations|stopped|stopTrillSpan|stopTextSpan|stopStaff|stopSlashedGraceMusic|stopGroup|stopGraceSlur|stopGraceMusic|stopAppoggiaturaMusic|stopAcciaccaturaMusic|stop|stencil|stemUp|stemNeutral|stemDown|startTrillSpan|startTextSpan|startStaff|startSlashedGraceMusic|startRepeatType|startGroup|startGraceSlur|startGraceMusic|startAppoggiaturaMusic|startAcciaccaturaMusic|start|staccato|staccatissimo|squashedPosition|spp|spacingTweaks|sp|southernHarmonyHeadsMinor|southernHarmonyHeads|sostenutoOn|sostenutoOff|soloText|soloIIText|snappizzicato|smaller|smallCaps|small|slurUp|slurSolid|slurNeutral|slurHalfSolid|slurHalfDashed|slurDown|slurDotted|slurDashed|slurDashPattern|slashedGrace|slashed-digit|slashChordSeparator|skipTypesetting|skip|simultaneous|simple|signumcongruentiae|showStaffSwitch|showSplitTiedTabNotes|shortfermata|shortVocalName|shortInstrumentName|shiftOnnn|shiftOnn|shiftOn|shiftOff|shiftDurations|sharp|shape|sfz|sfp|sff|sf|settingsFrom|setDefaultDurationToQuarter|set|sesquisharp|sesquiflat|sequential|semisharp|semiflat|semicirculus|semiGermanChords|segno|searchForVoice|scriptDefinitions|score|scaleDurations|scale|sans|sacredHarpHeadsMinor|sacredHarpHeads|rtoe|rounded-box|rotate|roman|rightHandFinger|right-column|right-brace|right-align|right|rheel|rfz|revertTimeSignatureSettings|revert|reverseturn|retrograde|restrainOpenStrings|rest|responsum|resetRelativeOctave|replace|repeatTie|repeatCountVisibility|repeat|removeWithTag|remove|relative|rehearsalMark|raise|quotedEventTypes|quotedCueEventTypes|quoteDuring|quilisma|put-adjacent|pushToTag|pt|property-recursive|printPartCombineTexts|printKeyCancellation|predefinedFretboardsOn|predefinedFretboardsOff|predefinedDiagramTable|prallup|prallprall|prallmordent|pralldown|prall|ppppp|pppp|ppp|pp|powerChords|powerChordSymbol|powerChordExceptions|postscript|portato|pointAndClickTypes|pointAndClickOn|pointAndClickOff|pitchedTrill|pipeSymbol|phrygian|phrasingSlurUp|phrasingSlurSolid|phrasingSlurNeutral|phrasingSlurHalfSolid|phrasingSlurHalfDashed|phrasingSlurDown|phrasingSlurDotted|phrasingSlurDashed|phrasingSlurDashPattern|pes|pedalUnaCordaStyle|pedalUnaCordaStrings|pedalSustainStyle|pedalSustainStrings|pedalSostenutoStyle|pedalSostenutoStrings|pattern|path|partialJazzMusic|partialJazzExceptions|partial|partcombineUp|partcombineUnisonoOnce|partcombineUnisono|partcombineSoloIOnce|partcombineSoloIIOnce|partcombineSoloII|partcombineSoloI|partcombineForce|partcombineDown|partcombineChordsOnce|partcombineChords|partcombineAutomaticOnce|partcombineAutomatic|partcombineApartOnce|partcombineApart|partcombine|partCombineTextsOnNote|partCombineListener|parenthesize|parenthesisOpenSymbol|parenthesisCloseSymbol|parallelMusic|paper|palmMuteOn|palmMuteOff|palmMute|pageTurn|pageBreak|page-ref|page-link|pad-x|pad-to-box|pad-markup|pad-around|p|omit|overrideTimeSignatureSettings|overrideProperty|override-lines|override|ottava|oriscus|open|oneVoice|once|on-the-fly|octaveCheck|numericTimeSignature|number|null|noteToFretFunction|note-by-number|note|normalsize|normal-text|normal-size-super|normal-size-sub|noPageTurn|noPageBreak|noChordSymbol|noBreak|noBeam|newSpacingSection|new|neumeDemoLayout|natural|name|musicglyph|musicMap|mp|mordent|modalTranspose|modalInversion|mm|mixolydian|minorChordModifier|minor|midiInstrument|midiChannelMapping|midi|middleCPosition|middleCClefPosition|mf|metronomeMarkFormatter|mergeDifferentlyHeadedOn|mergeDifferentlyHeadedOff|mergeDifferentlyDottedOn|mergeDifferentlyDottedOff|melismaEnd|melismaBusyProperties|melisma|medium|measureLength|maxima|markletter|markalphabet|markFormatter|markLengthOn|markLengthOff|mark|markLengthOn|markLengthOff|marcato|makeClusters|majorSevenSymbol|major|maininput|magnify|lyricMelismaAlignment|lydian|ltoe|lower|lookup|longfermata|longa|locrian|localKeySignature|lineprall|linea|line|ligature|lheel|left-column|left-brace|left-align|left|layout|larger|large|languageSaveAndChange|languageRestore|language|laissezVibrer|label|killCues|keyAlterationOrder|key|keepWithTag|keepAliveInterfaces|justify-string|justify-field|justify|justified-lines|italic|italianChords|ionian|inversion|interscoreline|instrumentTransposition|instrumentSwitch|instrumentName|instrumentEqualizer|indent|include|inclinatum|inStaffSegno|in|improvisationOn|improvisationOff|implicitTimeSignatureVisibility|ij|iij|ignoreFiguredBassRest|ignoreBarChecks|ignatzekExceptions|ignatzekExceptionMusic|ictus|huge|hspace|highStringOne|hideStaffSwitch|hideSplitTiedTabNotes|hideNotes|hide|header|hcenter-in|hbracket|harp-pedal|harmonicsOn|harmonicsOff|harmonicNote|harmonicByRatio|harmonicByFret|harmonicAccidentals|harmonic|handleNegativeFrets|halign|halfopen|grobdescriptions|graceSettings|grace|glissando|germanChords|general-align|fz|funkHeadsMinor|funkHeads|fullJazzExceptions|fromproperty|fret-diagram-verbose|fret-diagram-terse|fret-diagram|frenchChords|fraction|fp|footnote|fontsize|fontSize|fontCaps|flexa|flat|flageolet|firstClef|fingeringOrientations|finger|finalis|filled-box|fill-with-pattern|fill-line|figuredBassFormatter|fffff|ffff|fff|ff|fermataMarkup|fermata|featherDurations|f|eyeglasses|extraNatural|explicitKeySignatureVisibility|explicitCueClefVisibility|explicitClefVisibility|expandFullBarRests|eventChords|espressivo|escapedSmallerSymbol|escapedParenthesisOpenSymbol|escapedParenthesisCloseSymbol|escapedExclamationSymbol|escapedBiggerSymbol|epsfile|episemInitium|episemFinis|endincipit|enddim|enddecresc|enddecr|endcresc|endcr|endSpanners|endRepeatType|easyHeadsOn|easyHeadsOff|dynamicUp|dynamicNeutral|dynamicDown|dynamicAbsoluteVolumeFunction|dynamic|draw-dashed-line|draw-dotted-line|drumStyleTable|drumPitchTable|draw-line|draw-hline|draw-circle|downprall|downmordent|downbow|down|doublesharp|doubleflat|doubleRepeatType|dotsUp|dotsNeutral|dotsDown|dorian|divisioMinima|divisioMaxima|divisioMaior|displayMusic|displayLilyMusic|dir-column|dimTextDim|dimTextDecresc|dimTextDecr|dimHairpin|dim|description|descendens|deprecatedenddim|deprecatedendcresc|deprecateddim|deprecatedcresc|denies|deminutum|defaultchild|defaultTimeSignature|defaultNoteHeads|defaultBarType|default|decrescendoSpanner|decresc|decr|deadNotesOn|deadNotesOff|deadNote|dashUnderscore|dashPlus|dashLarger|dashHat|dashDot|dashDash|dashBar|cueDuringWithClef|cueDuring|cueClefUnset|cueClef|crossStaff|crescendoSpanner|crescTextCresc|crescHairpin|cresc|createSpacing|cr|context|consists|concat|compressFullBarRests|compoundMeter|command-name|combine|column-lines|column|coda|cm|clefPosition|clefOctavation|clefGlyph|clef|circulus|circle|chords|chordmodifiers|chordmode|chordRootNamer|chordPrefixSpacer|chordNoteNamer|chordNameSeparator|chordNameLowercaseMinor|chordNameFunction|chordNameExceptionsPartial|chordNameExceptionsFull|chordNameExceptions|char|change|center-column|center-align|center|cavum|caps|caesura|cadenzaOn|cadenzaOff|breve|breathe|breakDynamicSpan|break|bracketOpenSymbol|bracketCloseSymbol|bracket|box|bookpart|bookOutputSuffix|bookOutputName|book|bold|blackTriangleMarkup|bigger|bendAfter|beatStructure|beamHalfMeasure|beamExceptions|beam|bassStaffProperties|bassFigureStaffAlignmentUp|bassFigureStaffAlignmentNeutral|bassFigureStaffAlignmentDown|bassFigureExtendersOn|bassFigureExtendersOff|baseMoment|barNumberVisibility|barNumberFormatter|barNumberCheck|barCheckSynchronize|barAlways|bar|balloonText|balloonLengthOn|balloonLengthOff|balloonGrobText|backslashed-digit|automaticBars|absolute|autochange|autoCautionaries|autoBeaming|autoBeamOn|autoBeamOff|autoBeamCheck|autoAccidentals|auto-footnote|augmentum|auctum|assertBeamSlope|assertBeamQuant|ascendens|arrow-head|arpeggioParenthesisDashed|arpeggioParenthesis|arpeggioNormal|arpeggioBracket|arpeggioArrowUp|arpeggioArrowDown|arpeggio|appoggiatura|applyOutput|applyMusic|applyContext|appendToTag|alternative|alterBroken|allowPageTurn|alias|aikenHeadsMinor|aikenHeads|afterGraceFraction|afterGrace|aeolian|additionalPitchPrefix|addQuote|addInstrumentDefinition|accidentalStyle|acciaccatura|accepts|accentus|accent|abs-fontsize|aDueText|RemoveEmptyTabStaffContext|RemoveEmptyStaffContext|RemoveEmptyRhythmicStaffContext|RemoveEmptyDrumStaffContext|IJ|IIJ|single|EventClasses|C|B|AncientRemoveEmptyStaffContext|A|n)(?![a-zA-Z])",
                    "name": "entity.name.class.keyword.lilypond",
                    "content": "LilyPond keyword"
                },
                {
                    "match": "\\b(NullVoice|spacing|signature|routine|notes|handler|corrected|beams|arpeggios|Volta_engraver|Voice|Vertical_align_engraver|Vaticana_ligature_engraver|VaticanaVoice|VaticanaStaff|Tweak_engraver|Tuplet_engraver|Trill_spanner_engraver|Timing_translator|Time_signature_performer|Time_signature_engraver|Tie_performer|Tie_engraver|Text_spanner_engraver|Text_engraver|Tempo_performer|Tab_tie_follow_engraver|Tab_staff_symbol_engraver|Tab_note_heads_engraver|TabVoice|TabStaff|System_start_delimiter_engraver|Stem_engraver|Stanza_number_engraver|Stanza_number_align_engraver|Staff_symbol_engraver|Staff_performer|Staff_collecting_engraver|StaffGroup|Staff|Spanner_break_forbid_engraver|Span_bar_stub_engraver|Span_bar_engraver|Span_arpeggio_engraver|Spacing_engraver|Slur_performer|Slur_engraver|Slash_repeat_engraver|Separating_line_group_engraver|Script_row_engraver|Script_engraver|Script_column_engraver|Score|Rhythmic_column_engraver|RhythmicStaff|Rest_engraver|Rest_collision_engraver|Repeat_tie_engraver|Repeat_acknowledge_engraver|Pure_from_neighbor_engraver|Pitched_trill_engraver|Pitch_squash_engraver|Piano_pedal_performer|Piano_pedal_engraver|Piano_pedal_align_engraver|PianoStaff|Phrasing_slur_engraver|PetrucciVoice|PetrucciStaff|Percent_repeat_engraver|Part_combine_engraver|Parenthesis_engraver|Paper_column_engraver|Output_property_engraver|Ottava_spanner_engraver|Note_spacing_engraver|Note_performer|Note_name_engraver|Note_heads_engraver|Note_head_line_engraver|NoteNames|New_fingering_engraver|New_dynamic_engraver|Multi_measure_rest_engraver|Metronome_mark_engraver|Mensural_ligature_engraver|MensuralVoice|MensuralStaff|Mark_engraver|Lyrics|Lyric_performer|Lyric_engraver|Ligature_bracket_engraver|Ledger_line_engraver|Laissez_vibrer_engraver|KievanVoice|KievanStaff|Key_performer|Key_engraver|Keep_alive_together_engraver|Instrument_switch_engraver|Instrument_name_engraver|Hyphen_engraver|Hara_kiri_engraver|Grob_pq_engraver|GregorianTranscriptionVoice|GregorianTranscriptionStaff|GrandStaff|Grace_spacing_engraver|Grace_engraver|Grace_beam_engraver|Global|Glissando_engraver|Fretboard_engraver|FretBoards|Forbid_line_break_engraver|Footnote_engraver|Font_size_engraver|Fingering_engraver|Figured_bass_position_engraver|Figured_bass_engraver|FiguredBass|Extender_engraver|Episema_engraver|Dynamics|Dynamic_performer|Dynamic_align_engraver|Drum_notes_engraver|Drum_note_performer|DrumVoice|DrumStaff|Double_percent_repeat_engraver|Dots_engraver|Dot_column_engraver|Devnull|Default_bar_line_engraver|Custos_engraver|Cue_clef_engraver|CueVoice|Control_track_performer|Concurrent_hairpin_engraver|Collision_engraver|Cluster_spanner_engraver|Clef_engraver|Chord_tremolo_engraver|Chord_name_engraver|ChordNames|ChordNameVoice|ChoirStaff|Breathing_sign_engraver|Break_align_engraver|Bend_engraver|Beam_performer|Beam_engraver|Beam_collision_engraver|Bar_number_engraver|Bar_engraver|Axis_group_engraver|Auto_beam_engraver|Arpeggio_engraver|Accidental_engraver|Score|volta|unfold|percent|tremolo)\\b",
                    "name": "entity.name.function.reserved.lilypond",
                    "content": "Lilypond reserved word"
                },
                {
                    "match": "(128|64|32|16|8|4|2|1|\\\\breve|\\\\longa|\\\\maxima)(\\s*[.]\\s*)*=\\s*\\d+(\\s*~\\s*\\d+)?",
                    "name": "storage.type.tempo.lilypond",
                    "content": "LilyPond tempo or tempo range"
                },
                {
                    "match": "\\d+\\/\\d+",
                    "name": "storage.type.timesig.lilypond",
                    "content": "LilyPond time signature"
                },
                {
                    "match": "([-_+^.\\\\](\\s*))?\\d+(\\s*[.]\\s*)*((\\s*\\*\\s*\\d+(\\/\\d+)?)+)?",
                    "name": "storage.type.number.lilypond",
                    "content": "LilyPond number with optional augmentation dots"
                }
            ]
        },
        "notemode": {
            "patterns": [
                {
                    "include": "#notedrum"
                },
                {
                    "name": "meta.lilypond.notemode",
                    "begin": "({)",
                    "end": "(})",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "include": "#notenames"
                },
                {
                    "include": "#internals"
                },
                {
                    "include": "#drummode"
                },
                {
                    "include": "#lyricsmode"
                },
                {
                    "include": "#notemode-explicit"
                },
                {
                    "include": "#markupmode"
                },
                {
                    "include": "#figbassmode"
                },
                {
                    "include": "#lilypond-scheme"
                }
            ]
        },
        "drummode": {
            "patterns": [
                {
                    "name": "meta.lilypond.drummode",
                    "begin": "([-_^](\\s*))?(((\\\\)drums)|((\\\\)drummode))\\s*({)",
                    "end": "(})",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "4": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "6": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "7": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#notedrum"
                        },
                        {
                            "include": "#percussion_notes"
                        },
                        {
                            "include": "#internals"
                        },
                        {
                            "include": "#notemode-explicit"
                        },
                        {
                            "include": "$self"
                        },
                        {
                            "include": "#lyricsmode"
                        },
                        {
                            "include": "#markupmode"
                        },
                        {
                            "include": "#figbassmode"
                        },
                        {
                            "include": "#lilypond-scheme"
                        }
                    ]
                },
                {
                    "name": "meta.lilypond.drummode",
                    "begin": "({)",
                    "end": "(})",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#notedrum"
                        },
                        {
                            "include": "#percussion_notes"
                        },
                        {
                            "include": "#internals"
                        },
                        {
                            "include": "#lyricsmode"
                        },
                        {
                            "include": "$self"
                        },
                        {
                            "include": "#notemode-explicit"
                        },
                        {
                            "include": "#markupmode"
                        },
                        {
                            "include": "#figbassmode"
                        },
                        {
                            "include": "#lilypond-scheme"
                        }
                    ]
                }
            ]
        },
        "lyricsmode": {
            "patterns": [
                {
                    "name": "meta.lilypond.lyricsmode",
                    "begin": "([-_^](\\s*))?(((\\\\lyrics\\s*)({))|((\\\\lyricmode\\s*)({))|((\\\\addlyrics\\s*)({))|((\\\\lyricsto\\s*(\".*\")\\s*)({))|(((\\\\lyricsto)\\s*(\\S*)\\s*)({)))",
                    "end": "(})",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "5": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "6": {
                            "name": "entity.other.lilypond"
                        },
                        "8": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "9": {
                            "name": "entity.other.lilypond"
                        },
                        "11": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "12": {
                            "name": "entity.other.lilypond"
                        },
                        "14": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "15": {
                            "name": "string.lilypond"
                        },
                        "16": {
                            "name": "entity.other.lilypond"
                        },
                        "19": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "21": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#separator"
                        },
                        {
                            "include": "#melisma"
                        },
                        {
                            "include": "#elision"
                        },
                        {
                            "include": "#internals"
                        },
                        {
                            "include": "$self"
                        },
                        {
                            "include": "#markupmode"
                        },
                        {
                            "include": "#lilypond-scheme"
                        }
                    ]
                },
                {
                    "name": "meta.lilypond.lyricsmode.nested",
                    "begin": "({)",
                    "end": "(})",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#separator"
                        },
                        {
                            "include": "#melisma"
                        },
                        {
                            "include": "#elision"
                        },
                        {
                            "include": "#internals"
                        },
                        {
                            "include": "$self"
                        },
                        {
                            "include": "#markupmode"
                        },
                        {
                            "include": "#lilypond-scheme"
                        }
                    ]
                }
            ]
        },
        "notemode-explicit": {
            "patterns": [
                {
                    "name": "meta.lilypond-notemode-explicit",
                    "begin": "([-_^](\\s*))?(\\\\notemode)\\s*({)",
                    "end": "(})",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "3": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "4": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "$self"
                        },
                        {
                            "include": "#notenames"
                        },
                        {
                            "include": "#internals"
                        },
                        {
                            "include": "#notemode"
                        },
                        {
                            "include": "#lyricsmode"
                        },
                        {
                            "include": "#notemode-explicit"
                        },
                        {
                            "include": "#markupmode"
                        },
                        {
                            "include": "#figbassmode"
                        },
                        {
                            "include": "#lilypond-scheme"
                        }
                    ]
                }
            ]
        },
        "markupmode": {
            "patterns": [
                {
                    "name": "meta.lilypond.markupmode.singleword",
                    "begin": "([-_^](\\s*))?(((\\\\markup)(\\s+))|((\\\\markuplist)(\\s+)))",
                    "end": "(\\s+)",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "5": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "8": {
                            "name": "entity.name.class.keyword.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#internals"
                        },
                        {
                            "include": "#notemode-explicit"
                        },
                        {
                            "include": "$self"
                        },
                        {
                            "include": "#lilypond-scheme"
                        }
                    ]
                },
                {
                    "name": "meta.lilypond.markupmode",
                    "begin": "([-_^](\\s*))?(((\\\\markup\\s*)({))|((\\\\markuplist\\s*)({)))",
                    "end": "(})",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "5": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "8": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "9": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#internals"
                        },
                        {
                            "include": "#notemode-explicit"
                        },
                        {
                            "include": "$self"
                        },
                        {
                            "include": "#lilypond-scheme"
                        }
                    ]
                },
                {
                    "name": "meta.lilypond.markupmode.nested",
                    "begin": "({)",
                    "end": "(})",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#internals"
                        },
                        {
                            "include": "#notemode-explicit"
                        },
                        {
                            "include": "$self"
                        },
                        {
                            "include": "#lilypond-scheme"
                        }
                    ]
                }
            ]
        },
        "figbassmode": {
            "patterns": [
                {
                    "name": "meta.lilypond.figbassmode",
                    "begin": "({)|([-_^](\\s*))?(((\\\\figures\\s*)({))|((\\\\figuremode\\s*)({)))",
                    "end": "(})",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        },
                        "2": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "6": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "7": {
                            "name": "entity.other.lilypond"
                        },
                        "9": {
                            "name": "entity.name.class.keyword.lilypond"
                        },
                        "10": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "entity.other.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "$self"
                        },
                        {
                            "include": "#internals"
                        },
                        {
                            "include": "#notemode-explicit"
                        },
                        {
                            "include": "#markupmode"
                        },
                        {
                            "include": "#figuregroup"
                        },
                        {
                            "include": "#lilypond-scheme"
                        }
                    ]
                }
            ]
        },
        "lilypond-scheme":{
            "patterns": [
                {
                    "name": "meta.lilypond.scheme",
                    "begin": "\\$(`|')?\\(",
                    "end": "\\)",
                    "patterns": [
                        {
                            "include": "source.scheme"
                        }
                    ]
                },
                {
                    "name": "meta.lilypond.scheme",
                    "begin": "#(`|')?\\(",
                    "end": "\\)",
                    "patterns": [
                        {
                            "include": "source.scheme"
                        }
                    ]
                },
                {
                    "begin": "#",
                    "end": "\\s",
                    "name": "meta.lilypond.scheme",
                    "patterns": [
                        {
                            "include": "source.scheme"
                        }
                    ]
                }
            ]
        },
        "figuregroup": {
            "patterns": [
                {
                    "name": "meta.lilypond.figuregroup",
                    "begin": "(<)",
                    "end": "(>)(\\s*(128|64|32|16|8|4|2|1|\\\\breve|\\\\longa|\\\\maxima)(\\s*[.]\\s*)*((\\s*\\*\\s*\\d+(\\/\\d+)?)+)?)?",
                    "beginCaptures": {
                        "1": {
                            "name": "constant.numeric.fbgroupopen.lilypond"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "constant.numeric.fbgroupclose.lilypond"
                        },
                        "2": {
                            "name": "constant.numeric.fbgroupclose.lilypond"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#markupmode"
                        },
                        {
                            "include": "#group"
                        },
                        {
                            "include": "#figure"
                        },
                        {
                            "include": "#accidental"
                        }
                    ]
                },
                {
                    "include": "#lilypond-scheme"
                }
            ]
        },
        "notedrum": {
            "patterns": [
                {
                    "match": "<(?!<)|(?<!\\\\)>(?!>)(\\s*(128|64|32|16|8|4|2|1|\\\\breve|\\\\longa|\\\\maxima)(\\s*[.]\\s*)*((\\s*\\*\\s*\\d+(\\/\\d+)?)+)?)?",
                    "name": "keyword.operator.chord.lilypond",
                    "content": "LilyPond chord"
                },
                {
                    "match": "([_^-]\\s*)?\\[|\\]",
                    "name": "constant.numeric.beam.lilypond",
                    "content": "LilyPond manual beam"
                },
                {
                    "match": "<<|>>",
                    "name": "constant.language.polydelim.lilypond",
                    "content": "LilyPond polyphony delimiter"
                },
                {
                    "match": "\\\\\\\\",
                    "name": "constant.character.polysep.lilypond",
                    "content": "LilyPond polyphony separator"
                },
                {
                    "match": "[-_^][-_^+|!>.]",
                    "name": "string.interpolated.articulation.lilypond",
                    "content": "LilyPond articulation mark"
                },
                {
                    "match": "([_^-]\\s*)?\\(|[_^-]?~|\\)",
                    "name": "support.function.tieslur.lilypond",
                    "content": "LilyPond tie or slur"
                },
                {
                    "match": "([_^-]\\s*)?\\\\\\(|\\\\\\)",
                    "name": "support.constant.phraslur.lilypond",
                    "content": "LilyPond phrasing slur"
                },
                {
                    "match": "([_^-]\\s*)?\\\\\\[|\\\\\\]",
                    "name": "support.constant.ligature.lilypond",
                    "content": "LilyPond ligature"
                },
                {
                    "match": "[|]",
                    "name": "support.type.barline.lilypond",
                    "content": "LilyPond bar line"
                },
                {
                    "match": "\\\\[<!>]",
                    "name": "support.variable.hairpin.lilypond",
                    "content": "LilyPond hairpin"
                }
            ]
        },
        "percussion_notes": {
            "match": "\\b((((acousticbassdrum|acousticsnare|agh|agl|bassdrum|bd|bda|boh|bohm|boho|bol|bolm|bolo|cab|cabasa|cb|cgh|cghm|cgho|cgl|cglm|cglo|chinesecymbal|cl|claves|closedhihat|cowbell|crashcymbal|crashcymbala|crashcymbalb|cuim|cuio|cymc|cymca|cymcb|cymch|cymr|cymra|cymrb|cyms|da|db|dc|dd|de|electricsnare|fivedown|fiveup|fourdown|fourup|gui|guil|guiro|guis|halfopenhihat|handclap|hc|hh|hhc|hhho|hho|hhp|hiagogo|hibongo|hiconga|highfloortom|hightom|hihat|himidtom|hisidestick|hitimbale|hiwoodblock|loagogo|lobongo|loconga|longguiro|longwhistle|losidestick|lotimbale|lowfloortom|lowmidtom|lowoodblock|lowtom|mar|maracas|mutecuica|mutehibongo|mutehiconga|mutelobongo|muteloconga|mutetriangle|onedown|oneup|opencuica|openhibongo|openhiconga|openhihat|openlobongo|openloconga|opentriangle|pedalhihat|rb|ridebell|ridecymbal|ridecymbala|ridecymbalb|shortguiro|shortwhistle|sidestick|sn|sna|snare|sne|splashcymbal|ss|ssh|ssl|tamb|tambourine|tamtam|threedown|threeup|timh|timl|tomfh|tomfl|tomh|toml|tommh|tomml|tri|triangle|trim|trio|tt|twodown|twoup|ua|ub|uc|ud|ue|vibraslap|vibs|wbh|wbl|whl|whs))|s|r|R|q)(?![A-Za-z])(\\s*(128|64|32|16|8|4|2|1|\\\\breve|\\\\longa|\\\\maxima)(\\s*[.]\\s*)*((\\s*\\*\\s*\\d+(\\/\\d+)?)+)?)?)(?!(acousticbassdrum|acousticsnare|agh|agl|bassdrum|bd|bda|boh|bohm|boho|bol|bolm|bolo|cab|cabasa|cb|cgh|cghm|cgho|cgl|cglm|cglo|chinesecymbal|cl|claves|closedhihat|cowbell|crashcymbal|crashcymbala|crashcymbalb|cuim|cuio|cymc|cymca|cymcb|cymch|cymr|cymra|cymrb|cyms|da|db|dc|dd|de|electricsnare|fivedown|fiveup|fourdown|fourup|gui|guil|guiro|guis|halfopenhihat|handclap|hc|hh|hhc|hhho|hho|hhp|hiagogo|hibongo|hiconga|highfloortom|hightom|hihat|himidtom|hisidestick|hitimbale|hiwoodblock|loagogo|lobongo|loconga|longguiro|longwhistle|losidestick|lotimbale|lowfloortom|lowmidtom|lowoodblock|lowtom|mar|maracas|mutecuica|mutehibongo|mutehiconga|mutelobongo|muteloconga|mutetriangle|onedown|oneup|opencuica|openhibongo|openhiconga|openhihat|openlobongo|openloconga|opentriangle|pedalhihat|rb|ridebell|ridecymbal|ridecymbala|ridecymbalb|shortguiro|shortwhistle|sidestick|sn|sna|snare|sne|splashcymbal|ss|ssh|ssl|tamb|tambourine|tamtam|threedown|threeup|timh|timl|tomfh|tomfl|tomh|toml|tommh|tomml|tri|triangle|trim|trio|tt|twodown|twoup|ua|ub|uc|ud|ue|vibraslap|vibs|wbh|wbl|whl|whs))",
            "name": "keyword.percussionnote.lilypond",
            "content": "LilyPond percussion note or abbreviation of percussion note chord"
        },
        "group": {
            "name": "keyword.operator.figuregroup.brackets",
            "match": "(\\[)|(\\])",
            "content": "Vertical brackets grouping figured bass figures"
        },
        "figure": {
            "match": "\\d*(\\\\\\+|/|\\\\\\\\|\\\\!)?",
            "name": "keyword.fbfigure.lilypond",
            "content": "Figured bass figure, optionally with aug or dim indicators"
        },
        "accidental": {
            "match": "(!|\\+|-|\\+\\+|--)",
            "name": "keyword.fbaccidental.lilypond",
            "content": "Figured bass accidental"
        },
        "separator": {
            "match": "\\s*--\\s*",
            "name": "support.function.syllableseparator.lilypond",
            "content": "Lyrics syllable separator"
        },
        "melisma": {
            "match": "(?<=\\s)(_)(?=\\s)",
            "name": "storage.type.number.manualmelisma.lilypond",
            "content": "Lyrics melisma"
        },
        "elision": {
            "match": "(?<=\\S)[~_](?=\\S)",
            "name": "constant.language.elision.lilypond",
            "content": "Lyrics elision"
        }
    }
}
